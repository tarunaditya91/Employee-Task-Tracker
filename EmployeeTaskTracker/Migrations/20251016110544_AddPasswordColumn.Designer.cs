// <auto-generated />
using System;
using EmployeeTaskTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeTaskTracker.Migrations
{
    [DbContext(typeof(ApplicationDBcontext))]
    [Migration("20251016110544_AddPasswordColumn")]
    partial class AddPasswordColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("EmployeeTaskTracker.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("TEXT");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DateOfJoining = new DateTime(2025, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Designation = "Manager",
                            FullName = "manager1",
                            Password = "AQAAAAEAACcQAAAAEJz9k3v9+u5uT1r6zjvYJpQh5rJ8k1vQ==",
                            Role = "Manager"
                        },
                        new
                        {
                            EmployeeId = 2,
                            DateOfJoining = new DateTime(2025, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Designation = "Developer",
                            FullName = "employee1",
                            Password = "AQAAAAEAACcQAAAAEJz9k3v9+u5uT1r6zjvYJpQh5rJ8k1vQ==",
                            Role = "Employee"
                        },
                        new
                        {
                            EmployeeId = 3,
                            DateOfJoining = new DateTime(2025, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Designation = "Tester",
                            FullName = "employee2",
                            Password = "AQAAAAEAACcQAAAAEJz9k3v9+u5uT1r6zjvYJpQh5rJ8k1vQ==",
                            Role = "Employee"
                        });
                });

            modelBuilder.Entity("EmployeeTaskTracker.Models.TaskItem", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TaskId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TaskItems");
                });

            modelBuilder.Entity("EmployeeTaskTracker.Models.TaskItem", b =>
                {
                    b.HasOne("EmployeeTaskTracker.Models.Employee", "Employee")
                        .WithMany("TaskItems")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeTaskTracker.Models.Employee", b =>
                {
                    b.Navigation("TaskItems");
                });
#pragma warning restore 612, 618
        }
    }
}
